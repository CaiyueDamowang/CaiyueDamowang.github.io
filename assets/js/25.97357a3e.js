(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{360:function(t,a,e){"use strict";e.r(a);var r=e(9),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" 链表")]),t._v(" "),e("p",[e("code",[t._v("链表")]),t._v("（ linked list ）：\n其中的各对象按"),e("code",[t._v("线性顺序")]),t._v("排列。"),e("code",[t._v("链表")]),t._v("的顺序是由各个对象里的"),e("code",[t._v("指针")]),t._v("决定。")]),t._v(" "),e("p",[e("code",[t._v("双向链表")]),t._v("( doubly linked list ):\n每一个元素都是一个带有关键字"),e("code",[t._v("key")]),t._v("和两个指针"),e("code",[t._v("next")]),t._v("、"),e("code",[t._v("prev")])]),t._v(" "),e("p",[t._v("链表的搜索： 可能要搜索整个链表（因为是根据头结点的指针逐一搜索）")]),t._v(" "),e("p",[t._v("链表的插入/删除： 运行时间: "),e("code",[t._v("O(1)")])]),t._v(" "),e("h4",{attrs:{id:"思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),e("p",[t._v("设置快慢指针")]),t._v(" "),e("p",[t._v("遍历链表")]),t._v(" "),e("p",[t._v("反转结点（保存前后结点）")]),t._v(" "),e("h4",{attrs:{id:"描述链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描述链表"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"./NodeList"}},[t._v("描述链表")])]),t._v(" "),e("h4",{attrs:{id:"反转链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反转链表"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"./reversList"}},[t._v("反转链表")])]),t._v(" "),e("h4",{attrs:{id:"环形链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环形链表"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"./cycleList"}},[t._v("环形链表")])]),t._v(" "),e("h4",{attrs:{id:"合并链表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并链表"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"./mergeList"}},[t._v("合并链表")])]),t._v(" "),e("h4",{attrs:{id:"求链表中点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#求链表中点"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"./findMid"}},[t._v("求链表中点")])])])}),[],!1,null,null,null);a.default=s.exports}}]);