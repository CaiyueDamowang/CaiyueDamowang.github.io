(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{354:function(t,a,r){"use strict";r.r(a);var s=r(9),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("简单算法训练")]),t._v(" "),r("p",[t._v("1.经常性地做你不会做的题")]),t._v(" "),r("p",[t._v("2.多种解法方式轮流试，最大化地挖掘一道题的价值")]),t._v(" "),r("h3",{attrs:{id:"链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[t._v("#")]),t._v(" "),r("RouterLink",{attrs:{to:"/algorithm/nodeList/"}},[t._v("链表")])],1),t._v(" "),r("h3",{attrs:{id:"二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树"}},[t._v("#")]),t._v(" "),r("RouterLink",{attrs:{to:"/algorithm/Tree/"}},[t._v("二叉树")])],1),t._v(" "),r("h3",{attrs:{id:"栈和队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列"}},[t._v("#")]),t._v(" "),r("RouterLink",{attrs:{to:"/algorithm/stack&que/"}},[t._v("栈和队列")])],1),t._v(" "),r("h3",{attrs:{id:"图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#图"}},[t._v("#")]),t._v(" "),r("RouterLink",{attrs:{to:"/algorithm/Graph/"}},[t._v("图")])],1),t._v(" "),r("h3",{attrs:{id:"散列表的碰撞处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#散列表的碰撞处理"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"./hashTable"}},[t._v("散列表的碰撞处理")])])])}),[],!1,null,null,null);a.default=e.exports}}]);