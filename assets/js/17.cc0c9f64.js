(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{351:function(n,t,e){"use strict";e.r(t);var r=e(9),o=Object(r.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"单词接龙"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单词接龙"}},[n._v("#")]),n._v(" 单词接龙")]),n._v(" "),e("p",[n._v("给定两个单词（beginWord 和 endWord）和一个字典，找到从 beginWord 到 endWord 的"),e("strong",[n._v("最短")]),n._v("转换序列的长度。转换需遵循如下规则：")]),n._v(" "),e("p",[n._v("每次转换只能改变一个字母。\n转换过程中的中间单词必须是字典中的单词。\n说明:")]),n._v(" "),e("p",[n._v("1.如果不存在这样的转换序列，返回 0。\n2.所有单词具有相同的长度。\n3.所有单词只由小写字母组成。\n4.字典中不存在重复的单词。\n5.你可以假设 beginWord 和 endWord 是非空的，且二者不相同。")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("思路：\n如果两个节点是相似的则互为相邻结点\n构建图模型，广度优先遍历，"),e("br"),n._v("\n在遍历的过程中计算步数，找到"),e("code",[n._v("endWrod")]),n._v("则返回步数")])]),n._v(" "),e("li",[e("p",[n._v("如何用队列模拟图进行广度搜索？")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);