(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{367:function(t,a,r){"use strict";r.r(a);var e=r(9),s=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"栈和队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列"}},[t._v("#")]),t._v(" 栈和队列")]),t._v(" "),r("p",[t._v("栈： 先进后出的一种数据结构， 规定了入栈和出栈两种操作")]),t._v(" "),r("p",[t._v("队列： 先进先出的一种数据结构，规定了入队和出队的两种操作")]),t._v(" "),r("p",[t._v("两种结构在实现上基本都采用了线性表存储数据，设置了"),r("code",[t._v("栈顶")]),t._v("指针（"),r("code",[t._v("队头")]),t._v("、"),r("code",[t._v("队尾")]),t._v("指针）")]),t._v(" "),r("h4",{attrs:{id:"栈和队列的描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列的描述"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"./stackAndQueue"}},[t._v("栈和队列的描述")])]),t._v(" "),r("h4",{attrs:{id:"有效括号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#有效括号"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"./validBracket"}},[t._v("有效括号")])]),t._v(" "),r("h4",{attrs:{id:"二叉树的层次遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的层次遍历"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"../Tree/biTreeByLayer"}},[t._v("二叉树的层次遍历")])]),t._v(" "),r("h4",{attrs:{id:"正确的出栈顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#正确的出栈顺序"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"./rightStack"}},[t._v("正确的出栈顺序")])]),t._v(" "),r("h4",{attrs:{id:"前序遍历二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前序遍历二叉树"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"./biTreePreOrder"}},[t._v("前序遍历二叉树")])])])}),[],!1,null,null,null);a.default=s.exports}}]);