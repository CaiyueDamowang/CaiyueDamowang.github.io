(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{408:function(t,s,a){"use strict";a.r(s);var e=a(9),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss攻击"}},[t._v("#")]),t._v(" XSS攻击")]),t._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("XSS（Cross Site Scripting）攻击全称跨站脚本攻击，是为不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS，XSS是一种经常出现在web应用中的计算机安全漏洞，它允许恶意web用户将代码植入到提供给其它用户使用的页面中。比如这些代码包括HTML代码和客户端脚本。（摘自百度百科")]),t._v(" "),a("h2",{attrs:{id:"攻击方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击方式"}},[t._v("#")]),t._v(" 攻击方式")]),t._v(" "),a("p",[t._v("1、反射型\n　　反射型XSS，也叫非持久型XSS，是指发生请求时，XSS代码出现在请求URL中，作为参数提交到服务器，服务器解析并响应。响应结果中包含XSS代码，最后浏览器解析并执行。从概念上可以看出，反射型XSS代码是首先出现在URL中的，然后需要服务端解析，最后需要浏览器解析之后XSS代码才能够攻击。")]),t._v(" "),a("p",[t._v("在页面提交内容中插入一段代码，其中包含有< script >标签，提交给服务器")]),t._v(" "),a("p",[t._v("服务器未经转义就返回给浏览器，浏览器会解析其中的代码并且执行。")]),t._v(" "),a("p",[t._v("此类型攻击可以绕过浏览器的同源策略发出请求")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("2.存储型\n　　存储型XSS，也叫持久型XSS，主要是将XSS代码发送到服务器（不管是数据库、内存还是文件系统等。），然后在下次请求页面的时候就不用带上XSS代码了。最典型的就是留言板XSS。用户提交了一条包含XSS代码的留言到数据库。当目标用户查询留言时，那些留言的内容会从服务器解析之后加载出来。浏览器发现有XSS代码，就当做正常的HTML和JS解析执行。XSS攻击就发生了。\n")])])]),a("h2",{attrs:{id:"防范手段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防范手段"}},[t._v("#")]),t._v(" 防范手段")]),t._v(" "),a("p",[t._v("4、防范手段")]),t._v(" "),a("p",[t._v("1、入参字符过滤\n　　在源头控制，把输入的一些不合法的东西都过滤掉，从而保证安全性。如移除用户提交的的DOM属性如onerror，移除用户上传的Style节点，"),a("code",[t._v("<iframe>")]),t._v(", "),a("code",[t._v("<script>")]),t._v("，"),a("code",[t._v("<a>")]),t._v("节点等")]),t._v(" "),a("p",[t._v('2、出参进行编码\n　　如果源头没控制好，就得后期补救了：像一些常见的符号，如<>在输出的时候要对其进行转换编码，这样做浏览器是不会对该标签进行解释执行的，同时也不影响显示效果。例如：对<>做编码如："<"用:"<",">"用:">"来代替。')]),t._v(" "),a("p",[t._v("3、入参长度限制\n　　通过以上的案例我们不难发现xss攻击要能达成往往需要较长的字符串，因此对于一些可以预期的输入可以通过限制长度强制截断来进行防御。")]),t._v(" "),a("p",[t._v('4、设置cookie httponly为true\n　  Cookie由服务端来写并将httpOnly设置成为“true”，Cookie中设置了"HttpOnly"属性，那么通过程序(JS脚本、Applet等)将无法读取到Cookie信息，这样能有效的防止XSS攻击')]),t._v(" "),a("h2",{attrs:{id:"浏览器安全策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全策略"}},[t._v("#")]),t._v(" 浏览器安全策略")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("同源策略")])]),t._v(" "),a("li",[a("p",[t._v("外部程序操作浏览器执行js脚本需要经过用户批准")])]),t._v(" "),a("li",[a("p",[t._v("URL解析是否有不安全的字符串")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);