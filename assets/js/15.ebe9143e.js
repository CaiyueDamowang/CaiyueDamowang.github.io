(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{355:function(t,e,a){"use strict";a.r(e);var v=a(9),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"图和图算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图和图算法"}},[t._v("#")]),t._v(" 图和图算法")]),t._v(" "),a("p",[t._v("非线性的数据结构")]),t._v(" "),a("p",[t._v("图是一种（包含若干个节点），每个节点可以连接 0 个或多个元素")]),t._v(" "),a("p",[t._v("两个"),a("code",[t._v("节点")]),t._v("相连的部分称为"),a("code",[t._v("边")]),t._v("（edge）。节点也被称作"),a("code",[t._v("顶点")]),t._v("（vertice）。一个顶点的 "),a("code",[t._v("度")]),t._v("（degree）是指与该顶点相连的边的条数。")]),t._v(" "),a("p",[a("code",[t._v("圈")]),t._v("是至少有一条边的路径，且路径的第一个顶点和最后一个顶点相同。无论是"),a("code",[t._v("有向图")]),t._v("还是"),a("code",[t._v("无向图")]),t._v("，只要是没有重复边或重复顶点的圈,就是一个"),a("code",[t._v("简单图")]),t._v("。除了第一个和最后一个顶点意外，路径的其他顶点有重复的圈称为"),a("code",[t._v("平凡圈")]),t._v(".")]),t._v(" "),a("p",[a("a",{attrs:{href:"./search"}},[t._v("无权图的基础算法")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("广度优先遍历")])]),t._v(" "),a("li",[a("p",[t._v("深度优先遍历")])])]),t._v(" "),a("h4",{attrs:{id:"图的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图的表示"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"./expressOfGraph"}},[t._v("图的表示")])]),t._v(" "),a("h4",{attrs:{id:"单词接龙"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单词接龙"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"./labberLength"}},[t._v("单词接龙")])]),t._v(" "),a("h4",{attrs:{id:"无权图的最短路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无权图的最短路径"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"./shortPath"}},[t._v("无权图的最短路径")])])])}),[],!1,null,null,null);e.default=_.exports}}]);